{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"clam","text":"<p>clam identifies genomic regions with sufficient sequencing depth to be considered \"callable\" and uses this information to calculate population genetic statistics from VCFs. It eliminates the need to generate an all-sites VCF files while still producing accurate diversity estimates. clam was designed specifically for large population genomics datasets.</p>"},{"location":"#installation","title":"Installation","text":"<p>From bioconda: <pre><code>conda create -n clam bioconda::clam\n</code></pre></p> <p>From source: <pre><code>git clone https://github.com/cademirch/clam.git\ncd clam\ncargo build --release\n./target/release/clam --help\n</code></pre></p>"},{"location":"#basic-use","title":"Basic Use","text":""},{"location":"#generating-callable-loci-intervals","title":"Generating callable loci intervals","text":"<p>The clam <code>loci</code> command can be used to generate callable loci intervals from sequencing depth data from either alignments or GVCF files. The resulting interval file describes how many samples were callable at each position in the genome.</p> <pre><code>clam loci -t 16 -m 10 sample1.d4.gz sample2.d4.gz sample3.d4.gz\n</code></pre>"},{"location":"#using-callable-loci-intervals-to-estimate-popgen-statistics","title":"Using callable loci intervals to estimate popgen statistics","text":"<p>The clam <code>stat</code> command can be used to estimate common population genetic statistics such as \u03c0, d<sub>xy</sub>, and F<sub>ST</sub> in windows. <code>stat</code> uses the callable loci interval file alongside a VCF to produce accurate estimates, even in the presence of missing data.</p> <pre><code>clam stat -t 16 -w 10000 variants.vcf.gz callable-loci.d4\n</code></pre>"},{"location":"#documentation","title":"Documentation","text":"<p>Read the documentation for more information.</p>"},{"location":"#license","title":"License","text":"<p><code>clam</code> is distributed under the terms of the MIT license.</p>"},{"location":"cli_reference/","title":"Command-Line Help for <code>clam</code>","text":"<p>This page contains the help content for the <code>clam</code> command-line program.</p> <p>Command Overview:</p> <ul> <li>Command-Line Help for <code>clam</code></li> <li><code>clam</code></li> <li><code>clam loci</code></li> <li><code>clam stat</code></li> </ul>"},{"location":"cli_reference/#clam","title":"<code>clam</code>","text":"<pre><code>Usage: clam [OPTIONS] &lt;COMMAND&gt;\n\nCommands:\n  loci  Calculate callable sites from depth statistics.\n  stat  Calculate population genetic statistics from VCF using callable sites.\n  help  Print this message or the help of the given subcommand(s)\n\nOptions:\n  -v, --verbose...  Increase verbosity (-v, -vv for more verbosity)\n  -q, --quiet       Suppress output (overrides verbosity)\n  -h, --help        Print help\n  -V, --version     Print version\n</code></pre>"},{"location":"cli_reference/#clam-loci","title":"<code>clam loci</code>","text":"<pre><code>Usage: clam loci [OPTIONS] -o &lt;OUTDIR&gt; [INPUT]...\n\nArguments:\n  [INPUT]...  Input files (D4 format by default). Specify one or more files directly\n\nOptions:\n  -f, --filelist &lt;FILELIST&gt;  Path to file containing list of input files, one per line. Use this instead of positional input arguments for many files\n      --gvcf                 Use GVCF format instead of default D4 format for input files\n      --merged               Input is a merged D4 file (single file containing multiple samples)\n  -o &lt;OUTDIR&gt;                Output directory for results (required)\n      --bed                  Write additional BED file. Note: This can be slow for large datasets\n  -h, --help                 Print help\n  -V, --version              Print version\n\nSample-level Thresholds:\n  -m, --min-depth &lt;MIN_DEPTH&gt;\n          Minimum depth to consider a site callable for each individual [default: 0]\n  -M, --max-depth &lt;MAX_DEPTH&gt;\n          Maximum depth to consider a site callable for each individual [default: inf]\n      --thresholds-file &lt;THRESHOLD_FILE&gt;\n          Custom thresholds per chromosome. Tab-separated file: chrom, min, max\n\nSite-level Thresholds:\n  -d, --depth-proportion &lt;DEPTH_PROPORTION&gt;\n          Proportion of samples that must pass thresholds at a site to consider it callable. Value between 0.0 and 1.0 [default: 0]\n  -u, --min-mean-depth &lt;MEAN_DEPTH_MIN&gt;\n          Minimum mean depth across all samples required at a site to consider it callable [default: 0]\n  -U, --max-mean-depth &lt;MEAN_DEPTH_MAX&gt;\n          Maximum mean depth across all samples allowed at a site to consider it callable [default: inf]\n  -p, --population-file &lt;POPULATION_FILE&gt;\n          Path to file that defines populations. Tab separated: sample, population_name\n\nChromosome Filtering:\n  -x &lt;EXCLUDE&gt;...                    Comma separated list of chromosomes to exclude. Example: --exclude chr1,chr2,chrX\n      --exclude-file &lt;EXCLUDE_FILE&gt;  Path to file with chromosomes to exclude, one per line\n  -i &lt;INCLUDE&gt;...                    Comma separated list of chromosomes to include (restrict analysis to). Example: --include chr1,chr2,chr3\n      --include-file &lt;INCLUDE_FILE&gt;  Path to file with chromosomes to include, one per line\n\nPerformance:\n  -t, --threads &lt;THREADS&gt;  Number of threads to use for parallel processing [default: 1]\n\nEXAMPLES:\n    # Basic usage with positional input files\n    clam loci -o output_dir input1.d4 input2.d4\n\n    # Using a file list instead of positional arguments\n    clam loci -f filelist.txt -o output_dir\n\n    # Set custom depth thresholds\n    clam loci -o output_dir -m 10 -M 100 input1.d4 input2.d4\n</code></pre>"},{"location":"cli_reference/#clam-stat","title":"<code>clam stat</code>","text":"<pre><code>Usage: clam stat [OPTIONS] &lt;--window-size &lt;WINDOW_SIZE&gt;|--regions-file &lt;REGIONS_FILE&gt;&gt; &lt;VCF&gt; [CALLABLE_SITES]\n\nArguments:\n  &lt;VCF&gt;             Path to input VCF file\n  [CALLABLE_SITES]  Path to input callable sites D4 file from clam loci\n\nOptions:\n  -o, --outdir &lt;OUTDIR&gt;\n          Where to write output files. Defaults to current working directory\n  -t, --threads &lt;THREADS&gt;\n          Number of threads to use [default: 1]\n  -w, --window-size &lt;WINDOW_SIZE&gt;\n          Size of windows for statistics in bp. Conflicts with 'regions-file'\n      --ploidy &lt;PLOIDY&gt;\n          Set ploidy. If not provided, try to infer from first genotype in VCF\n  -r, --regions-file &lt;REGIONS_FILE&gt;\n          File specifying regions to calculate statistics for. Conflicts with 'window-size'\n  -s, --sites-file &lt;SITES_FILE&gt;\n          Specify sites to consider for calculations. Bed format\n  -p, --population-file &lt;POPULATION_FILE&gt;\n          Path to file that defines populations. Tab separated: sample, population_name\n  -f, --fai &lt;FASTA_INDEX&gt;\n          Path to fasta index for reference VCF was called against. Only needed if VCF does not have contig info in the header\n  -x &lt;EXCLUDE&gt;...\n          Comma separated list of chromosomes to exclude\n      --exclude-file &lt;EXCLUDE_FILE&gt;\n          Path to file with chromosomes to exclude, one per line\n      --roh-file &lt;ROH_FILE&gt;\n          Path to RoH file\n  -i &lt;INCLUDE&gt;...\n          Comma separated list of chromosomes to include (restrict analysis to)\n      --include-file &lt;INCLUDE_FILE&gt;\n          Path to file with chromosomes to include, one per line\n  -h, --help\n          Print help\n</code></pre>"},{"location":"tutorial/01_overview/","title":"Overview","text":"<p>clam is a command-line tool for population genomics that provides an efficient workflow for calculating accurate population genetic statistics. Instead of requiring an all-sites VCF (which can be prohibitively large), clam uses a two-step process:</p> <ol> <li>First, identify genomic regions with sufficient sequencing depth to be considered \"callable\" using <code>clam loci</code></li> <li>Then, calculate population genetic statistics using these callable regions and a VCF containing variants with <code>clam stat</code></li> </ol> <p>This approach eliminates the need for generating all-sites VCF files while still producing accurate diversity estimates, making it particularly suitable for large population genomics datasets.</p>"},{"location":"tutorial/02_callable_loci/","title":"Generating Callable Loci","text":"<p>The first step is to generate callable loci files, which identify genomic regions where sequencing depth is sufficient for reliable variant calling.</p>"},{"location":"tutorial/02_callable_loci/#inputs","title":"Inputs","text":"<p>clam loci accepts sequencing depth information in two formats:</p> <ol> <li> <p>D4 files (default): These are highly compressed estimates of sample depth for every genomic site. You can generate D4 files from alignment (BAM) files using tools like mosdepth. Must be bgzipped and indexed.</p> </li> <li> <p>GVCF files: Use the <code>--gvcf</code> flag to specify input files in GVCF format. (Experimental as of v0.1.2)</p> </li> </ol> <p>Generating D4 Files using mosdepth</p> <p>The following will generate <code>sample.per-base.d4.gz</code> and <code>sample.per-base.d4.gz.gzi</code> <pre><code>mosdepth --d4 sample sample.bam\nbgzip --index sample.per-base.d4\n</code></pre></p> <p>You can provide input files in several ways:</p> <ul> <li>As positional arguments: <code>clam loci file1.d4.gz file2.d4.gz -o output_dir</code></li> <li>Using a file list: <code>clam loci -f file_list.txt -o output_dir</code>, one file path per line.</li> <li>Using a merged D4 file: <code>clam loci --merged merged_samples.d4 -o output_dir</code></li> </ul>"},{"location":"tutorial/02_callable_loci/#options","title":"Options","text":""},{"location":"tutorial/02_callable_loci/#depth-thresholds","title":"Depth Thresholds","text":"<p>Control which sites are considered \"callable\" using the following options:</p>"},{"location":"tutorial/02_callable_loci/#per-sample-thresholds","title":"Per-Sample Thresholds","text":"The following options control if a site is considered callable at the sample level. <code>-m, --min-depth</code> Minimum depth to consider a site callable for each individual [default: 0] <code>-M, --max-depth</code> Maximum depth to consider a site callable for each individual [default: inf] <code>--thresholds-file</code> <p>Custom thresholds per chromosome. Tab-separated file: chrom, min, max</p> <p>Example format: <pre><code>chr1    10    100\nchr2    5     50\nchrX    15    150\n</code></pre></p>"},{"location":"tutorial/02_callable_loci/#site-level-thresholds","title":"Site-Level Thresholds","text":"The following options control if a site is considered callable. <code>-d, --depth-proportion</code> Proportion of samples that must pass thresholds (0.0-1.0, default: 0) <code>-u, --min-mean-depth</code> Minimum mean depth across all samples (default: 0) <code>-U, --max-mean-depth</code> Maximum mean depth across all samples (default: infinity) <p>Example requiring at least 80% of samples to pass individual thresholds: <pre><code>clam loci -m 10 -M 100 -d 0.8 -o output sample1.d4.gz ...\n</code></pre></p>"},{"location":"tutorial/02_callable_loci/#chromosome-filtering","title":"Chromosome Filtering","text":"<p>You can select specific chromosomes to exclude or restrict your analysis to , see CLI Reference for details.</p>"},{"location":"tutorial/02_callable_loci/#specifying-populations","title":"Specifying Populations","text":"<p>clam loci supports multiple populations for estimating d<sub>xy</sub> and F<sub>ST</sub> downstream with clam stat.</p> <p>To specify populations (<code>-p, --populations</code>), create a tab seperated file that maps samples to population labels:</p> <pre><code>sample1    population1\nsample2    population1\nsample3    population2\nsample4    population2\nsample5    population3\n</code></pre> <p>Sample Names</p> <p>The sample names in your population file must exactly match the sample identifiers contained in your input files. For D4 files, this is typically the prefix of the filename (before <code>.d4.gz</code>).</p>"},{"location":"tutorial/02_callable_loci/#outputs","title":"Outputs","text":"<p>By default, clam loci generates a callable loci interval file in the specified output directory. This file contains genomic regions that meet your specified callability criteria.</p>"},{"location":"tutorial/02_callable_loci/#next-steps","title":"Next Steps","text":"<p>The callable loci file generated by this command can be used with the clam stat command to calculate population genetic statistics while accounting for regions where genotypes could be reliably called.</p>"},{"location":"tutorial/03_clam_stat/","title":"Calculating Statistics","text":"<p>After generating callable loci, the next step is to calculate population genetic statistics using those regions and your variant data with <code>clam stat</code>.</p>"},{"location":"tutorial/03_clam_stat/#inputs","title":"Inputs","text":"<p><code>clam stat</code> requires two main inputs:</p> <ol> <li> <p>A VCF file containing variants: This must be a bgzipped and indexed VCF file.</p> </li> <li> <p>Callable loci file: The D4 format file generated by <code>clam loci</code> that defines which regions have sufficient sequencing depth.</p> </li> </ol>"},{"location":"tutorial/03_clam_stat/#options","title":"Options","text":""},{"location":"tutorial/03_clam_stat/#windows-or-regions","title":"Windows or Regions","text":"You must specify either a window size or a regions file for which to calculate statistics: <code>-w, --window-size</code> Size of windows for statistics in base pairs. <code>-r, --regions-file</code> BED file specifying regions to calculate statistics for."},{"location":"tutorial/03_clam_stat/#populations","title":"Populations","text":"<p>To specify populations (<code>-p, --populations</code>), create a tab seperated file that maps samples to population labels:</p> <pre><code>sample1    population1\nsample2    population1\nsample3    population2\nsample4    population2\nsample5    population3\n</code></pre> <p>Sample Names</p> <p>The sample names in your population file must exactly the samples in the header of your VCF.</p>"},{"location":"tutorial/03_clam_stat/#runs-of-homozygosity","title":"Runs of Homozygosity","text":"<code>--roh-file</code> stat can accept per-sample runs of homozygosity (ROH) intervals to ignore spurious heterozygous calls when calculating stats. ROH file must be tab seperated with the following columns: <code>chrom, start, end, sample</code>"},{"location":"tutorial/03_clam_stat/#chromosome-filtering","title":"Chromosome Filtering","text":"<p>You can select specific chromosomes to exclude or restrict your analysis to , see CLI Reference for details.</p>"},{"location":"tutorial/03_clam_stat/#outputs","title":"Outputs","text":"<p><code>clam stat</code> generates several output files in the specified output directory: 1. <code>clam_pi.tsv</code>: Always generated. 2. <code>clam_dxy.tsv</code>: Only generated if populations were specified. 3. <code>clam_fst.tsv</code>: Only generated if populations were specified. 4. <code>clam_het.tsv</code>: Always generated.</p> <p>These files are tab-separated and can be easily imported into R, Python, or other analysis tools.</p>"}]}